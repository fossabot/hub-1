name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - docs-githubaction
    tags:
      - '*'
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set commit message
        run: echo "COMMIT_MESSAGE=`git log --format=%B -n 1`" >> $GITHUB_ENV

      - name: Run a test
        if: ${{ !startsWith(env.COMMIT_MESSAGE, '[doc]') }}
        run: make test
        
      - name: Publish the coverage
        if: ${{ !startsWith(env.COMMIT_MESSAGE, '[doc]') }}
        run: bash <(curl -s https://codecov.io/bash)

      - name: Set latest tag
        if: ${{ !startsWith(env.COMMIT_MESSAGE, '[doc]') }}
        run: echo "RELEASE_VERSION=`echo ${GITHUB_REF#refs/*/} | sed -e 's/master//'`" >> $GITHUB_ENV
      
      - name: Publish docker images
        if: ${{ !startsWith(env.COMMIT_MESSAGE, '[doc]') }}
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin && make push LATEST_TAG=${{ env.RELEASE_VERSION }}
    
  docs:
    runs-on: ubuntu-20.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta

      - name: Build
        run: npm run docs:build
     
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch



 #     - name: Navigate into the build output directory
 #       run: cd docs/.vuepress/dist

#      - name: Deploying to a plgd.dev
#        run: echo 'plgd.dev' > CNAME

#      - name: Commit deploy name
#        run: git add -A && git commit -m 'deploy'
        
#      - name: Push to gh-pages branch
#        run: git push -f git@github.com:<USERNAME>/plgd-dev/cloud.git master:gh-pages

# if you are deploying to https://<USERNAME>.github.io
# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master

# if you are deploying to https://<USERNAME>.github.io/<REPO>
# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages

